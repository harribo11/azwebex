// Code generated by Pulumi SDK Generator DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package azurejustrun

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Specifies whether data in the container may be accessed publicly and the level of access.
type PublicAccess string

const (
	PublicAccessContainer = PublicAccess("Container")
	PublicAccessBlob      = PublicAccess("Blob")
	PublicAccessNone      = PublicAccess("None")
)

func (PublicAccess) ElementType() reflect.Type {
	return reflect.TypeOf((*PublicAccess)(nil)).Elem()
}

func (e PublicAccess) ToPublicAccessOutput() PublicAccessOutput {
	return pulumi.ToOutput(e).(PublicAccessOutput)
}

func (e PublicAccess) ToPublicAccessOutputWithContext(ctx context.Context) PublicAccessOutput {
	return pulumi.ToOutputWithContext(ctx, e).(PublicAccessOutput)
}

func (e PublicAccess) ToPublicAccessPtrOutput() PublicAccessPtrOutput {
	return e.ToPublicAccessPtrOutputWithContext(context.Background())
}

func (e PublicAccess) ToPublicAccessPtrOutputWithContext(ctx context.Context) PublicAccessPtrOutput {
	return PublicAccess(e).ToPublicAccessOutputWithContext(ctx).ToPublicAccessPtrOutputWithContext(ctx)
}

func (e PublicAccess) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e PublicAccess) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e PublicAccess) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e PublicAccess) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type PublicAccessOutput struct{ *pulumi.OutputState }

func (PublicAccessOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*PublicAccess)(nil)).Elem()
}

func (o PublicAccessOutput) ToPublicAccessOutput() PublicAccessOutput {
	return o
}

func (o PublicAccessOutput) ToPublicAccessOutputWithContext(ctx context.Context) PublicAccessOutput {
	return o
}

func (o PublicAccessOutput) ToPublicAccessPtrOutput() PublicAccessPtrOutput {
	return o.ToPublicAccessPtrOutputWithContext(context.Background())
}

func (o PublicAccessOutput) ToPublicAccessPtrOutputWithContext(ctx context.Context) PublicAccessPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v PublicAccess) *PublicAccess {
		return &v
	}).(PublicAccessPtrOutput)
}

func (o PublicAccessOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o PublicAccessOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e PublicAccess) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o PublicAccessOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o PublicAccessOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e PublicAccess) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type PublicAccessPtrOutput struct{ *pulumi.OutputState }

func (PublicAccessPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**PublicAccess)(nil)).Elem()
}

func (o PublicAccessPtrOutput) ToPublicAccessPtrOutput() PublicAccessPtrOutput {
	return o
}

func (o PublicAccessPtrOutput) ToPublicAccessPtrOutputWithContext(ctx context.Context) PublicAccessPtrOutput {
	return o
}

func (o PublicAccessPtrOutput) Elem() PublicAccessOutput {
	return o.ApplyT(func(v *PublicAccess) PublicAccess {
		if v != nil {
			return *v
		}
		var ret PublicAccess
		return ret
	}).(PublicAccessOutput)
}

func (o PublicAccessPtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o PublicAccessPtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *PublicAccess) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// PublicAccessInput is an input type that accepts PublicAccessArgs and PublicAccessOutput values.
// You can construct a concrete instance of `PublicAccessInput` via:
//
//          PublicAccessArgs{...}
type PublicAccessInput interface {
	pulumi.Input

	ToPublicAccessOutput() PublicAccessOutput
	ToPublicAccessOutputWithContext(context.Context) PublicAccessOutput
}

var publicAccessPtrType = reflect.TypeOf((**PublicAccess)(nil)).Elem()

type PublicAccessPtrInput interface {
	pulumi.Input

	ToPublicAccessPtrOutput() PublicAccessPtrOutput
	ToPublicAccessPtrOutputWithContext(context.Context) PublicAccessPtrOutput
}

type publicAccessPtr string

func PublicAccessPtr(v string) PublicAccessPtrInput {
	return (*publicAccessPtr)(&v)
}

func (*publicAccessPtr) ElementType() reflect.Type {
	return publicAccessPtrType
}

func (in *publicAccessPtr) ToPublicAccessPtrOutput() PublicAccessPtrOutput {
	return pulumi.ToOutput(in).(PublicAccessPtrOutput)
}

func (in *publicAccessPtr) ToPublicAccessPtrOutputWithContext(ctx context.Context) PublicAccessPtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(PublicAccessPtrOutput)
}

// The SKU name. Required for account creation; optional for update. Note that in older versions, SKU name was called accountType.
type StorageSkuName string

const (
	StorageSkuName_Standard_LRS    = StorageSkuName("Standard_LRS")
	StorageSkuName_Standard_GRS    = StorageSkuName("Standard_GRS")
	StorageSkuName_Standard_RAGRS  = StorageSkuName("Standard_RAGRS")
	StorageSkuName_Standard_ZRS    = StorageSkuName("Standard_ZRS")
	StorageSkuName_Premium_LRS     = StorageSkuName("Premium_LRS")
	StorageSkuName_Premium_ZRS     = StorageSkuName("Premium_ZRS")
	StorageSkuName_Standard_GZRS   = StorageSkuName("Standard_GZRS")
	StorageSkuName_Standard_RAGZRS = StorageSkuName("Standard_RAGZRS")
)

func (StorageSkuName) ElementType() reflect.Type {
	return reflect.TypeOf((*StorageSkuName)(nil)).Elem()
}

func (e StorageSkuName) ToStorageSkuNameOutput() StorageSkuNameOutput {
	return pulumi.ToOutput(e).(StorageSkuNameOutput)
}

func (e StorageSkuName) ToStorageSkuNameOutputWithContext(ctx context.Context) StorageSkuNameOutput {
	return pulumi.ToOutputWithContext(ctx, e).(StorageSkuNameOutput)
}

func (e StorageSkuName) ToStorageSkuNamePtrOutput() StorageSkuNamePtrOutput {
	return e.ToStorageSkuNamePtrOutputWithContext(context.Background())
}

func (e StorageSkuName) ToStorageSkuNamePtrOutputWithContext(ctx context.Context) StorageSkuNamePtrOutput {
	return StorageSkuName(e).ToStorageSkuNameOutputWithContext(ctx).ToStorageSkuNamePtrOutputWithContext(ctx)
}

func (e StorageSkuName) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e StorageSkuName) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e StorageSkuName) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e StorageSkuName) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type StorageSkuNameOutput struct{ *pulumi.OutputState }

func (StorageSkuNameOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*StorageSkuName)(nil)).Elem()
}

func (o StorageSkuNameOutput) ToStorageSkuNameOutput() StorageSkuNameOutput {
	return o
}

func (o StorageSkuNameOutput) ToStorageSkuNameOutputWithContext(ctx context.Context) StorageSkuNameOutput {
	return o
}

func (o StorageSkuNameOutput) ToStorageSkuNamePtrOutput() StorageSkuNamePtrOutput {
	return o.ToStorageSkuNamePtrOutputWithContext(context.Background())
}

func (o StorageSkuNameOutput) ToStorageSkuNamePtrOutputWithContext(ctx context.Context) StorageSkuNamePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v StorageSkuName) *StorageSkuName {
		return &v
	}).(StorageSkuNamePtrOutput)
}

func (o StorageSkuNameOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o StorageSkuNameOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e StorageSkuName) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o StorageSkuNameOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o StorageSkuNameOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e StorageSkuName) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type StorageSkuNamePtrOutput struct{ *pulumi.OutputState }

func (StorageSkuNamePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**StorageSkuName)(nil)).Elem()
}

func (o StorageSkuNamePtrOutput) ToStorageSkuNamePtrOutput() StorageSkuNamePtrOutput {
	return o
}

func (o StorageSkuNamePtrOutput) ToStorageSkuNamePtrOutputWithContext(ctx context.Context) StorageSkuNamePtrOutput {
	return o
}

func (o StorageSkuNamePtrOutput) Elem() StorageSkuNameOutput {
	return o.ApplyT(func(v *StorageSkuName) StorageSkuName {
		if v != nil {
			return *v
		}
		var ret StorageSkuName
		return ret
	}).(StorageSkuNameOutput)
}

func (o StorageSkuNamePtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o StorageSkuNamePtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *StorageSkuName) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// StorageSkuNameInput is an input type that accepts StorageSkuNameArgs and StorageSkuNameOutput values.
// You can construct a concrete instance of `StorageSkuNameInput` via:
//
//          StorageSkuNameArgs{...}
type StorageSkuNameInput interface {
	pulumi.Input

	ToStorageSkuNameOutput() StorageSkuNameOutput
	ToStorageSkuNameOutputWithContext(context.Context) StorageSkuNameOutput
}

var storageSkuNamePtrType = reflect.TypeOf((**StorageSkuName)(nil)).Elem()

type StorageSkuNamePtrInput interface {
	pulumi.Input

	ToStorageSkuNamePtrOutput() StorageSkuNamePtrOutput
	ToStorageSkuNamePtrOutputWithContext(context.Context) StorageSkuNamePtrOutput
}

type storageSkuNamePtr string

func StorageSkuNamePtr(v string) StorageSkuNamePtrInput {
	return (*storageSkuNamePtr)(&v)
}

func (*storageSkuNamePtr) ElementType() reflect.Type {
	return storageSkuNamePtrType
}

func (in *storageSkuNamePtr) ToStorageSkuNamePtrOutput() StorageSkuNamePtrOutput {
	return pulumi.ToOutput(in).(StorageSkuNamePtrOutput)
}

func (in *storageSkuNamePtr) ToStorageSkuNamePtrOutputWithContext(ctx context.Context) StorageSkuNamePtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(StorageSkuNamePtrOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*PublicAccessInput)(nil)).Elem(), PublicAccess("Container"))
	pulumi.RegisterInputType(reflect.TypeOf((*PublicAccessPtrInput)(nil)).Elem(), PublicAccess("Container"))
	pulumi.RegisterInputType(reflect.TypeOf((*StorageSkuNameInput)(nil)).Elem(), StorageSkuName("Standard_LRS"))
	pulumi.RegisterInputType(reflect.TypeOf((*StorageSkuNamePtrInput)(nil)).Elem(), StorageSkuName("Standard_LRS"))
	pulumi.RegisterOutputType(PublicAccessOutput{})
	pulumi.RegisterOutputType(PublicAccessPtrOutput{})
	pulumi.RegisterOutputType(StorageSkuNameOutput{})
	pulumi.RegisterOutputType(StorageSkuNamePtrOutput{})
}
